/* Import Google Font - Poppins */
@import url("https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600;700&display=swap");
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  font-family: "Poppins", sans-serif;
}

/* for the whole body */
body {
  display: flex;
  flex-direction: column;
  padding: 0 10px;
  min-height: 100vh;
  align-items: center;
  background: #3498db;
  justify-content: center;
}

/* this applies to the whole container */
.wrapper {
  height: 390px;
  max-width: 410px;
  background: #fff;
  border-radius: 7px;
  padding: 20px 25px 0;
  transition: height 0.2s ease;
  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
}

/* this will be added after the creation of the QR code */
.wrapper.active {
  height: 650px;
}

/* for the header */
header h1 {
  font-size: 21px;
  font-weight: 500;
}

/* for the input form */
.wrapper .form {
  margin: 20px 0 25px;
}

/* for the areas in the input elements - just toggle bgColor property to know what it is doing*/
.form :where(input, button) {
  width: 100%;
  height: 55px;
  border: none;
  outline: none;
  border-radius: 5px;
  transition: 0.1s ease;
  /* background-color: black; */
}

/* for all the input elements */
.form input {
  font-size: 18px;
  padding: 0 17px;
  border: 1px solid #999;
  margin: 0.5rem 0;
}

/* when user is writing in any of the input box - this will highlight that element */
.form input:focus {
  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.13);
}

/* for all the placeholders of all the input elements */
.form input::placeholder {
  color: #999;
}

/* for the button */
.form button {
  color: #fff;
  cursor: pointer;
  margin-top: 20px;
  font-size: 17px;
  background: #3498db;
}

/* for the qrCode's outer div - before the QR is generated */
.qr-code {
  opacity: 0;
  display: flex;
  padding: 33px 0;
  border-radius: 5px;
  align-items: center;
  pointer-events: none;
  justify-content: center;
  border: 1px solid black;
}

/* for the qrCode's outer div - first the .active class will be added after the creation of the QR code and after that it will add the border */
.wrapper.active .qr-code {
  opacity: 1;
  pointer-events: auto;
  transition: opacity 0.5s 0.05s ease;
}

/* to give the size to the image of the generated QR code */
.qr-code img {
  width: 170px;
}

.pass {
  display: flex;
  flex-direction: column;
  margin: 2rem;
}

/* media queries for the responsiveness */
@media (max-width: 430px) {
  .wrapper {
    height: 255px;
    padding: 16px 20px;
  }
  .wrapper.active {
    height: 510px;
  }
  header p {
    color: #696969;
  }
  .form :where(input, button) {
    height: 52px;
  }
  .qr-code img {
    width: 160px;
  }
}
